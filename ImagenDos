import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;

import javax.imageio.ImageIO;

public class ImagenDos {
	//23(0-22) x 20(0-19)
	private int width = 900;
    private int height = 800;
	private static int PIXEL_SIZE = 40;
	private static Graphics2D g;
	
	//colores
	Color waddleOrange = new Color(232,90,27);
	Color darkWaddle = new Color(219,37,9);
	Color darkestWaddle = new Color(133,1,12);
	Color blush = new Color(255,132,144);
	Color face = new Color(255,205,135);
	
    BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
    
    public void paintImage() {
		g = image.createGraphics(); 
		drawBackground(PIXEL_SIZE, Color.white);
		
		//shadow
		drawHorizontalLine(8,13,1,Color.black);
		drawHorizontalLine(6,15,2,Color.black);
		drawHorizontalLine(5,16,3,Color.black);
		drawHorizontalLine(4,17,4,Color.black);
		drawHorizontalLine(4,17,5,Color.black);
		drawHorizontalLine(3,18,6,Color.black);
		drawHorizontalLine(2,18,7,Color.black);
		drawHorizontalLine(2,19,8,Color.black);
		fillRect(1,9,20,4,Color.black);
		drawHorizontalLine(2,19,13,Color.black);
		drawHorizontalLine(3,18,14,Color.black);
		drawHorizontalLine(2,19,15,Color.black);
		fillRect(1,16,20,2,Color.black);
		drawHorizontalLine(2,9,18,Color.black);
		drawHorizontalLine(12,19,18,Color.black);
		
		//body
		drawHorizontalLine(7,14,3,waddleOrange);
		drawHorizontalLine(6,16,4,waddleOrange);
		drawHorizontalLine(5,16,5,waddleOrange);
		drawHorizontalLine(5,17,6,waddleOrange);
		drawHorizontalLine(4,17,7,waddleOrange);
		drawHorizontalLine(3,17,8,waddleOrange);
		fillRect(2,9,18,4,waddleOrange);
		drawHorizontalLine(4,18,13,waddleOrange);
		drawHorizontalLine(4,17,14,waddleOrange);
		drawHorizontalLine(3,18,15,waddleOrange);
		drawHorizontalLine(2,19,16,waddleOrange);
		drawHorizontalLine(2,9,17,waddleOrange);
		drawHorizontalLine(12,19,17,waddleOrange);
		
		//sombreado
		drawHorizontalLine(10,11,2,darkWaddle);
		putPixel(9,2,darkestWaddle);
		putPixel(12,2,darkestWaddle);
		drawHorizontalLine(7,8,3,darkWaddle);
		drawHorizontalLine(13,14,3,darkWaddle);
		putPixel(6,4,darkWaddle);
		putPixel(8,4,darkWaddle);
		drawHorizontalLine(15,16,4,darkestWaddle);
		putPixel(5,5,darkWaddle);
		drawVerticalLine(5,6,7,darkestWaddle);
		drawVerticalLine(5,6,16,darkestWaddle);	
		putPixel(17,6,darkestWaddle);
		putPixel(4,7,darkWaddle);
		drawVerticalLine(7,8,17,darkWaddle);	
		putPixel(3,8,darkWaddle);
		putPixel(6,8,darkWaddle);
		putPixel(2,9,darkestWaddle);
		fillRect(5,9,14,4,darkWaddle);
		putPixel(19,9,darkestWaddle);
		putPixel(17,9,darkestWaddle);
		putPixel(2,11,darkWaddle);
		putPixel(4,11,darkWaddle);
		putPixel(19,11,darkWaddle);
		putPixel(2,12,darkestWaddle);
		putPixel(19,12,darkestWaddle);
		drawHorizontalLine(3,17,12,darkWaddle);
		putPixel(4,13,darkestWaddle);
		drawHorizontalLine(5,6,13,darkWaddle);
		drawHorizontalLine(17,18,13,darkestWaddle);
		drawHorizontalLine(6,8,14,darkWaddle);
		drawHorizontalLine(15,16,14,darkWaddle);
		putPixel(17,14,darkestWaddle);
		drawHorizontalLine(8,14,15,darkWaddle);
		drawHorizontalLine(9,13,16,darkWaddle);
		putPixel(19,16,darkestWaddle);
		putPixel(19,17,darkestWaddle);
		
		//face
		drawHorizontalLine(9,14,4,face);
		drawHorizontalLine(8,15,5,face);
		drawHorizontalLine(8,15,6,face);
		drawHorizontalLine(8,16,7,face);
		drawHorizontalLine(7,16,8,face);
		fillRect(6,9,11,4,face);
		drawHorizontalLine(7,16,13,face);
		fillRect(3,15,5,2,face);
		fillRect(16,15,3,2,face);
		
		//blush
		putPixel(16,7,blush);
		drawHorizontalLine(8,9,10,blush);
		drawHorizontalLine(15,17,10,blush);
		drawVerticalLine(11,12,17,blush);
		putPixel(7,13,blush);
		putPixel(16,13,blush);
		putPixel(8,16,blush);
		drawHorizontalLine(3,8,17,blush);
		drawHorizontalLine(15,17,17,blush);
		putPixel(15,16,blush);
		
		//eyes and extra
		putPixel(4,15,Color.white);
		putPixel(10,6,Color.black);
		drawVerticalLine(7,8,9,Color.black);
		drawVerticalLine(7,8,11,Color.black);
		putPixel(14,6,Color.black);
		drawVerticalLine(7,8,13,Color.black);
		drawVerticalLine(7,8,15,Color.black);

		

		


		
        drawSquareGrid(PIXEL_SIZE, Color.black);

		// Guardamos la imagen en formato JPG
        try {       
            ImageIO.write(image, "jpg", new File("WadleDee.jpg"));
            System.out.println("yeii !!!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

	
	private static void drawVerticalLine(int a, int b, int x, Color c){
   	    g.setColor(c);
    	for(int i=a;i<=b;i++){
    		 putPixel(x, i, c);
        }
    }
    
    private static void drawHorizontalLine(int a, int b, int y, Color c){
    	g.setColor(c);
        for(int i=a;i<=b;i++){
        	 putPixel(i, y, c);
        }
    }
    
    private static void putPixel(int x, int y, Color c){       
	   g.setColor(c);
	   g.fillRect(x * PIXEL_SIZE, y * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);    
    }
    
    private static void fillRect(int x, int y, int width, int height, Color c){
    	g.setColor(c);
    	g.fillRect(x * PIXEL_SIZE, y * PIXEL_SIZE, width*PIXEL_SIZE, height*PIXEL_SIZE);
    }
    
    private static void drawSquareGrid(int size, Color c) {
    	g.setColor(c);
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) { 
                g.drawRect(i * PIXEL_SIZE, j * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
            }
        }
    }
    private static void drawBackground(int size, Color c) {
    	g.setColor(c);
    	for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                g.fillRect(i * PIXEL_SIZE, j * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);                
            }
        }
    }
}
